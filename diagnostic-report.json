{
  "formatDateFunction": {
    "exists": true,
    "implementationFound": true,
    "implementation": "export function formatDate(date: Date | string | null | undefined, formatString = \"MMM d, yyyy h:mm a\"): string {\n  if (!date) return \"Not available\"\n\n  try {\n    const dateObj = typeof date === 'string' ? new Date(date) : date\n    if (!dateObj || isNaN(dateObj.getTime())) return \"Invalid date\"\n    return format(dateObj, formatString)\n  }"
  },
  "profileViewComponent": {
    "importsFormatDate": true,
    "usesFormatDate": true,
    "lastLoginImplementations": [
      "profile.lastLogin\r\n    ? new Date(profile.lastLogin).toLocaleDateString('en-US', {\r\n        year: 'numeric',\r\n        month: 'numeric',\r\n        day: 'numeric',\r\n        hour: '2-digit',\r\n        minute: '2-digit'\r\n      })\r\n    : 'Not available';\r\n\r\n  // Handle document upload button click\r\n  const handleUploadClick = () => {\r\n    fileInputRef.current?.click();\r\n  };\r\n\r\n  // Handle file selection\r\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const files = e.target.files;\r\n    if (files && files.length > 0) {\r\n      // In a real app, you would upload the file to your server here\r\n      console.log(\"File selected:\", files[0].name);\r\n\r\n      // Reset the input\r\n      if (fileInputRef.current) {\r\n        fileInputRef.current.value = \"\";\r\n      }\r\n    }\r\n  };\r\n\r\n  // Handle profile edit dialog open\r\n  const handleEditProfileClick = () => {\r\n    // Reset form data to current profile values\r\n    setProfileData({\r\n      name: profile.name || \"\",\r\n      bio: profile.bio || \"\",\r\n      jobTitle: profile.jobTitle || \"\",\r\n      location: profile.location || \"\",\r\n      phone: profile.phone || \"\",\r\n      department: profile.department || \"\"\r\n    });\r\n    setEditDialogOpen(true);\r\n  };\r\n\r\n  // Handle profile update\r\n  const handleProfileUpdate = async () => {\r\n    try {\r\n      await onUpdateProfile(profileData);\r\n      setEditDialogOpen(false);\r\n    } catch (error) {\r\n      console.error('Error updating profile:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col gap-6\">\r\n      {/* Edit Profile Dialog */}\r\n      <Dialog open={editDialogOpen} onOpenChange={setEditDialogOpen}>\r\n        <DialogContent className=\"sm:max-w-[425px]\">\r\n          <DialogHeader>\r\n            <DialogTitle>Edit Profile</DialogTitle>\r\n            <DialogDescription>\r\n              Update your profile information below.\r\n            </DialogDescription>\r\n          </DialogHeader>\r\n          <div className=\"grid gap-4 py-4\">\r\n            <div className=\"grid grid-cols-4 items-center gap-4\">\r\n              <Label htmlFor=\"name\" className=\"text-right\">\r\n                Name\r\n              </Label>\r\n              <Input\r\n                id=\"name\"\r\n                value={profileData.name}\r\n                onChange={(e) => setProfileData({ ...profileData, name: e.target.value })}\r\n                className=\"col-span-3\"\r\n              />\r\n            </div>\r\n            <div className=\"grid grid-cols-4 items-center gap-4\">\r\n              <Label htmlFor=\"jobTitle\" className=\"text-right\">\r\n                Job Title\r\n              </Label>\r\n              <Input\r\n                id=\"jobTitle\"\r\n                value={profileData.jobTitle}\r\n                onChange={(e) => setProfileData({ ...profileData, jobTitle: e.target.value })}\r\n                className=\"col-span-3\"\r\n              />\r\n            </div>\r\n            <div className=\"grid grid-cols-4 items-center gap-4\">\r\n              <Label htmlFor=\"department\" className=\"text-right\">\r\n                Department\r\n              </Label>\r\n              <Input\r\n                id=\"department\"\r\n                value={profileData.department}\r\n                onChange={(e) => setProfileData({ ...profileData, department: e.target.value })}\r\n                className=\"col-span-3\"\r\n              />\r\n            </div>\r\n            <div className=\"grid grid-cols-4 items-center gap-4\">\r\n              <Label htmlFor=\"location\" className=\"text-right\">\r\n                Location\r\n              </Label>\r\n              <Input\r\n                id=\"location\"\r\n                value={profileData.location}\r\n                onChange={(e) => setProfileData({ ...profileData, location: e.target.value })}\r\n                className=\"col-span-3\"\r\n              />\r\n            </div>\r\n            <div className=\"grid grid-cols-4 items-center gap-4\">\r\n              <Label htmlFor=\"phone\" className=\"text-right\">\r\n                Phone\r\n              </Label>\r\n              <Input\r\n                id=\"phone\"\r\n                value={profileData.phone}\r\n                onChange={(e) => setProfileData({ ...profileData, phone: e.target.value })}\r\n                className=\"col-span-3\"\r\n              />\r\n            </div>\r\n            <div className=\"grid grid-cols-4 items-center gap-4\">\r\n              <Label htmlFor=\"bio\" className=\"text-right\">\r\n                Bio\r\n              </Label>\r\n              <Textarea\r\n                id=\"bio\"\r\n                value={profileData.bio}\r\n                onChange={(e) => setProfileData({ ...profileData, bio: e.target.value })}\r\n                className=\"col-span-3\"\r\n                rows={4}\r\n              />\r\n            </div>\r\n          </div>\r\n          <DialogFooter>\r\n            <Button type=\"button\" variant=\"outline\" onClick={() => setEditDialogOpen(false)}>\r\n              Cancel\r\n            </Button>\r\n            <Button type=\"button\" onClick={handleProfileUpdate}>\r\n              <Save className=\"mr-2 h-4 w-4\" /> Save Changes\r\n            </Button>\r\n          </DialogFooter>\r\n        </DialogContent>\r\n      </Dialog>\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold tracking-tight\">\r\n            {isOwnProfile ? 'My Profile' : `${profile.name || 'User'}'s Profile`}\r\n          </h1>\r\n          <p className=\"text-muted-foreground\">\r\n            Manage your account settings and preferences\r\n          </p>\r\n        </div>\r\n\r\n        {canEdit && (\r\n          <Button variant=\"default\" onClick={handleEditProfileClick}>\r\n            <Pencil className=\"mr-2 h-4 w-4\" /> Edit Profile\r\n          </Button>\r\n        )}\r\n      </div>\r\n\r\n      <Tabs value={activeTab} onValueChange={setActiveTab} className=\"w-full\">\r\n        <TabsList className=\"w-full container mx-auto\">\r\n          <TabsTrigger value=\"overview\">Overview</TabsTrigger>\r\n          <TabsTrigger value=\"attendance\">Attendance</TabsTrigger>\r\n          <TabsTrigger value=\"documents\">Documents</TabsTrigger>\r\n          <TabsTrigger value=\"projects\">Projects</TabsTrigger>\r\n          <TabsTrigger value=\"tasks\">Tasks</TabsTrigger>\r\n          <TabsTrigger value=\"activity\">Activity</TabsTrigger>\r\n        </TabsList>\r\n\r\n        <TabsContent value=\"attendance\" className=\"mt-6\">\r\n          <div className=\"grid gap-6 md:grid-cols-1\">\r\n            <UserAttendanceSummary userId={profile.id} />\r\n          </div>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"overview\" className=\"mt-6\">\r\n          <div className=\"grid gap-6 md:grid-cols-7\">\r\n            {/* Profile card */}\r\n            <Card className=\"md:col-span-2\">\r\n              <CardHeader>\r\n                <CardTitle>Profile</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"flex flex-col items-center text-center mb-6\">\r\n                  <div className=\"relative\">\r\n                    <Avatar className=\"h-24 w-24 mb-4\">\r\n                      {profile.image ? (\r\n                        <AvatarImage src={profile.image} alt={profile.name || \"User\"} />\r\n                      ) : (\r\n                        <AvatarFallback className=\"text-lg font-semibold\">\r\n                          {getUserInitials()}\r\n                        </AvatarFallback>\r\n                      )}\r\n                    </Avatar>\r\n                    {canEdit && (\r\n                      <div className=\"absolute bottom-4 right-0 bg-primary text-white rounded-full p-1 cursor-pointer\"\r\n                           onClick={() => fileInputRef.current?.click()}>\r\n                        <Camera className=\"h-4 w-4\" />\r\n                        <input\r\n                          type=\"file\"\r\n                          ref={fileInputRef}\r\n                          className=\"hidden\"\r\n                          accept=\"image/*\"\r\n                          onChange={async (e) => {\r\n                            const file = e.target.files?.[0];\r\n                            if (file) {\r\n                              try {\r\n                                await onUploadImage(file);\r\n                                // Clear the input value so the same file can be selected again\r\n                                if (fileInputRef.current) {\r\n                                  fileInputRef.current.value = \"\";\r\n                                }\r\n                              } catch (error) {\r\n                                console.error('Error uploading image:', error);\r\n                              }\r\n                            }\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <h2 className=\"text-xl font-bold\">{profile.name || \"Admin User\"}</h2>\r\n                  <p className=\"text-sm text-muted-foreground\">{profile.email}</p>\r\n                </div>\r\n\r\n                <div className=\"flex flex-col gap-3 text-sm border-t pt-4\">\r\n                  {profile.bio && (\r\n                    <div className=\"mb-2\">\r\n                      <p className=\"text-muted-foreground italic\">\"{profile.bio}\"</p>\r\n                    </div>\r\n                  )}\r\n                  {profile.jobTitle && (\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <User className=\"h-4 w-4 text-muted-foreground\" />\r\n                      <p className=\"text-muted-foreground font-medium\">{profile.jobTitle}</p>\r\n                    </div>\r\n                  )}\r\n                  {profile.department && (\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <FileText className=\"h-4 w-4 text-muted-foreground\" />\r\n                      <p className=\"text-muted-foreground\">{profile.department}</p>\r\n                    </div>\r\n                  )}\r\n                  {profile.phone && (\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <Phone className=\"h-4 w-4 text-muted-foreground\" />\r\n                      <p className=\"text-muted-foreground\">{profile.phone}</p>\r\n                    </div>\r\n                  )}\r\n                  {profile.location && (\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <MapPin className=\"h-4 w-4 text-muted-foreground\" />\r\n                      <p className=\"text-muted-foreground\">{profile.location}</p>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            {/* Status cards */}\r\n            <div className=\"md:col-span-5 grid gap-6 md:grid-cols-3\">\r\n              <Card>\r\n                <CardContent className=\"pt-6\">\r\n                  <div className=\"flex flex-col items-center gap-2\">\r\n                    <p className=\"text-sm text-muted-foreground\">System Role</p>\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <RoleBadge role={profile.role} type=\"system\" showTooltip={true} />\r\n                    </div>\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n              <Card>\r\n                <CardContent className=\"pt-6\">\r\n                  <div className=\"flex flex-col items-center gap-2\">\r\n                    <p className=\"text-sm text-muted-foreground\">Status</p>\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <Badge variant=\"outline\" className=\"bg-green-50 text-green-700 border-green-200 text-xl font-bold h-8\">\r\n                        Active\r\n                      </Badge>\r\n                    </div>\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n              <Card>\r\n                <CardContent className=\"pt-6\">\r\n                  <div className=\"flex flex-col items-center gap-2\">\r\n                    <p className=\"text-sm text-muted-foreground\">Last Login</p>\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <Clock className=\"h-4 w-4 text-muted-foreground\" />\r\n                      <p className=\"text-xl font-bold\">\r\n                        {profile.lastLogin\r\n                          ? formatDate(profile.lastLogin)\r\n                          : <span className=\"text-sm font-normal text-muted-foreground\">Not tracked</span>",
      "profile.lastLogin\r\n                          ? formatDate(profile.lastLogin)\r\n                          : <span className=\"text-sm text-muted-foreground\">Not tracked</span>"
    ]
  },
  "userProfileHook": {
    "exists": true,
    "includesLastLogin": true
  },
  "userQueriesFile": {
    "exists": true,
    "includesLastLogin": true
  }
}